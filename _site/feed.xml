<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trung Le blog</title>
    <description>We can only see a short distance ahead, but we can see plenty there that needs to be done. - Alan Turing</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 25 Oct 2021 08:40:24 -0600</pubDate>
    <lastBuildDate>Mon, 25 Oct 2021 08:40:24 -0600</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Neural Asp</title>
        <description>
</description>
        <pubDate>Sat, 16 Oct 2021 00:00:00 -0600</pubDate>
        <link>http://localhost:4000/2021/10/16/neural-asp/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/10/16/neural-asp/</guid>
        
        
      </item>
    
      <item>
        <title>Embedding Symbolic Knowledge into Deep Networks (NeurIPS2019)</title>
        <description>
</description>
        <pubDate>Mon, 07 Jun 2021 14:00:00 -0600</pubDate>
        <link>http://localhost:4000/2021/06/07/ssl-abductive/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/06/07/ssl-abductive/</guid>
        
        
      </item>
    
      <item>
        <title>NERO: A Neural Rule Grounding Framework for Label-Efficient Relation Extraction (The Web Conference 2020)</title>
        <description>&lt;p&gt;This paper tackles the problem of the lacking of perfectly labelled data in the task of Relation Extraction(RE) 
by proposing a &lt;strong&gt;NE&lt;/strong&gt;ural &lt;strong&gt;R&lt;/strong&gt;ule &lt;strong&gt;G&lt;/strong&gt;rounding &lt;strong&gt;F&lt;/strong&gt;ramework for label-efficient relation extraction(NERO). NERO first 
uses text mining algorithms to extract frequent &lt;em&gt;labelling rules&lt;/em&gt; from the data. Then, it applies a neural network&lt;/p&gt;

&lt;p&gt;Inspired by &lt;a href=&quot;https://twitter.com/mdreid&quot;&gt;Mark Reid’s&lt;/a&gt; blog post &lt;a href=&quot;http://mark.reid.name/blog/switching-to-hakyll.html&quot;&gt;Switching from Jekyll to Hakyll&lt;/a&gt; I decided to abandon Wordpress and give Jekyll a try (note, I currently do not yet feel pro enough to switch to Haskell-based Hakyll). I can confidently say that I could not be happier about this decision.&lt;/p&gt;

&lt;h3 id=&quot;wordpress-monster&quot;&gt;Wordpress Monster&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;“So what’s wrong with Wordpress?”&lt;/em&gt; You may ask. Let’s see, everything:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wordpress blogs are clunky, slow and bloated.&lt;/li&gt;
  &lt;li&gt;Wordpress is dynamically rendered with &lt;strong&gt;.php&lt;/strong&gt;. There are really only few niche applications where this is necessary. Dynamic code execution exposes your blog to hackers and exploits: zero-day attacks, viruses, etc. My own blog was hacked ~2 months ago and all my posts had been infected with spammy content that kept re-inserting itself magically when I removed it.&lt;/li&gt;
  &lt;li&gt;Wordpress is popular among the masses of people who don’t know any better, and therefore attracts the largest amount of spammers.&lt;/li&gt;
  &lt;li&gt;Your posts are stuck forever in an ugly, Wordpress-specific SQL database (ew). You can’t easily import/export posts. You do not really own your content in raw and nimble form.&lt;/li&gt;
  &lt;li&gt;Wordpress is blocked in China.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wordpress is a bloated, clunky, slow, vulnerable, closed mess.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;jekyll-3&quot;&gt;Jekyll &amp;lt;3&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; describes itself as a tool for building &lt;em&gt;“Simple, blog-aware, static sites”&lt;/em&gt;, and was originally written by one of the Github co-founders, &lt;a href=&quot;http://tom.preston-werner.com/&quot;&gt;Tom Preston-Werner&lt;/a&gt;. It is flat and transparent: Your blog workspace is a single folder with a config file, and a few folders for CSS and HTML templates. All my content, for example, lives in two folders:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My blog posts are just files in a single folder &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;, written in &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown&lt;/a&gt;. Including this post, of course.&lt;/li&gt;
  &lt;li&gt;My images are in a single folder &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it. You call &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll build&lt;/code&gt; from command line and it will automatically render all posts it finds in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder from markdown to HTML, wraps it with header/footer templates, creates the parent index page that lists all your posts and outputs everything into a directory &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; directory holds your entire webpage as static content. It can then be uploaded to a webserver wherever you like.&lt;/p&gt;

&lt;p&gt;The entire code base consists of like 7 files. It’s easy to see how the HTML templates get composed to your final site. It’s trivial to tweak the CSS or any of the HTML templates. For example, I added &lt;strong&gt;Google Analytics&lt;/strong&gt; tracking code to all my pages by tweaking the html template, and also &lt;strong&gt;Disqus&lt;/strong&gt; comments to all my posts by tweaking the posts template with the Disqus Javascript code.&lt;/p&gt;

&lt;h4 id=&quot;github-integration&quot;&gt;Github integration&lt;/h4&gt;

&lt;p&gt;Lastly, as you might expect Jekyll is tightly integrated with Github: create a repository that looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt; and add your files to the repo. Github will automatically compile your files with Jekyll and make the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder available. For example, mine lives on &lt;a href=&quot;http://karpathy.github.io/&quot;&gt;karpathy.github.io&lt;/a&gt;. Thus, Github makes sure that your blog is beautifully backed up &lt;strong&gt;forever in simple markdown&lt;/strong&gt;, and also &lt;strong&gt;hosts your content&lt;/strong&gt;!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll strikes the balance: It’s packed with just the right amount of features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;example-workflow&quot;&gt;Example workflow&lt;/h4&gt;
&lt;p&gt;To give a flavor for the workflow, to add a new blog post I proceed as follows:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_posts
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vim 2014-07-02-example-page.markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we write the blog post in markdown, here’s an example file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
layout: post
title:  &lt;span class=&quot;s2&quot;&gt;&quot;Post title&quot;&lt;/span&gt;
excerpt: &lt;span class=&quot;s2&quot;&gt;&quot;A nice post&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;:   2014-07-02 10:00:00
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;

Hello world, this is &lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;markdown&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lets pop back out to console now. I could preview the changes in a local webserver with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll serve --watch&lt;/code&gt; (the watch switch refreshes any updated files as you write them). Now let’s just push it live:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;new blog post&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the last command, Github will see that my repo has changed and automatically refreshes &lt;a href=&quot;http://karpathy.github.io/&quot;&gt;karpathy.github.io&lt;/a&gt; to point to the newly generated &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;. My post is live!&lt;/p&gt;

&lt;p&gt;Anyway, that’s just a brief taste. Check out &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and get blogging in a sane way!&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Jun 2021 14:00:00 -0600</pubDate>
        <link>http://localhost:4000/2021/06/07/nero/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/06/07/nero/</guid>
        
        
      </item>
    
      <item>
        <title>Embedding Symbolic Knowledge into Deep Networks (NeurIPS2019)</title>
        <description>&lt;p&gt;Inspired by &lt;a href=&quot;https://twitter.com/mdreid&quot;&gt;Mark Reid’s&lt;/a&gt; blog post &lt;a href=&quot;http://mark.reid.name/blog/switching-to-hakyll.html&quot;&gt;Switching from Jekyll to Hakyll&lt;/a&gt; I decided to abandon Wordpress and give Jekyll a try (note, I currently do not yet feel pro enough to switch to Haskell-based Hakyll). I can confidently say that I could not be happier about this decision.&lt;/p&gt;

&lt;h3 id=&quot;wordpress-monster&quot;&gt;Wordpress Monster&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;“So what’s wrong with Wordpress?”&lt;/em&gt; You may ask. Let’s see, everything:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wordpress blogs are clunky, slow and bloated.&lt;/li&gt;
  &lt;li&gt;Wordpress is dynamically rendered with &lt;strong&gt;.php&lt;/strong&gt;. There are really only few niche applications where this is necessary. Dynamic code execution exposes your blog to hackers and exploits: zero-day attacks, viruses, etc. My own blog was hacked ~2 months ago and all my posts had been infected with spammy content that kept re-inserting itself magically when I removed it.&lt;/li&gt;
  &lt;li&gt;Wordpress is popular among the masses of people who don’t know any better, and therefore attracts the largest amount of spammers.&lt;/li&gt;
  &lt;li&gt;Your posts are stuck forever in an ugly, Wordpress-specific SQL database (ew). You can’t easily import/export posts. You do not really own your content in raw and nimble form.&lt;/li&gt;
  &lt;li&gt;Wordpress is blocked in China.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Wordpress is a bloated, clunky, slow, vulnerable, closed mess.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;jekyll-3&quot;&gt;Jekyll &amp;lt;3&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; describes itself as a tool for building &lt;em&gt;“Simple, blog-aware, static sites”&lt;/em&gt;, and was originally written by one of the Github co-founders, &lt;a href=&quot;http://tom.preston-werner.com/&quot;&gt;Tom Preston-Werner&lt;/a&gt;. It is flat and transparent: Your blog workspace is a single folder with a config file, and a few folders for CSS and HTML templates. All my content, for example, lives in two folders:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My blog posts are just files in a single folder &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;, written in &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown&lt;/a&gt;. Including this post, of course.&lt;/li&gt;
  &lt;li&gt;My images are in a single folder &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it. You call &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll build&lt;/code&gt; from command line and it will automatically render all posts it finds in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder from markdown to HTML, wraps it with header/footer templates, creates the parent index page that lists all your posts and outputs everything into a directory &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; directory holds your entire webpage as static content. It can then be uploaded to a webserver wherever you like.&lt;/p&gt;

&lt;p&gt;The entire code base consists of like 7 files. It’s easy to see how the HTML templates get composed to your final site. It’s trivial to tweak the CSS or any of the HTML templates. For example, I added &lt;strong&gt;Google Analytics&lt;/strong&gt; tracking code to all my pages by tweaking the html template, and also &lt;strong&gt;Disqus&lt;/strong&gt; comments to all my posts by tweaking the posts template with the Disqus Javascript code.&lt;/p&gt;

&lt;h4 id=&quot;github-integration&quot;&gt;Github integration&lt;/h4&gt;

&lt;p&gt;Lastly, as you might expect Jekyll is tightly integrated with Github: create a repository that looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt; and add your files to the repo. Github will automatically compile your files with Jekyll and make the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder available. For example, mine lives on &lt;a href=&quot;http://karpathy.github.io/&quot;&gt;karpathy.github.io&lt;/a&gt;. Thus, Github makes sure that your blog is beautifully backed up &lt;strong&gt;forever in simple markdown&lt;/strong&gt;, and also &lt;strong&gt;hosts your content&lt;/strong&gt;!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll strikes the balance: It’s packed with just the right amount of features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;example-workflow&quot;&gt;Example workflow&lt;/h4&gt;
&lt;p&gt;To give a flavor for the workflow, to add a new blog post I proceed as follows:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_posts
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vim 2014-07-02-example-page.markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we write the blog post in markdown, here’s an example file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
layout: post
title:  &lt;span class=&quot;s2&quot;&gt;&quot;Post title&quot;&lt;/span&gt;
excerpt: &lt;span class=&quot;s2&quot;&gt;&quot;A nice post&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;:   2014-07-02 10:00:00
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;

Hello world, this is &lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;markdown&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lets pop back out to console now. I could preview the changes in a local webserver with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll serve --watch&lt;/code&gt; (the watch switch refreshes any updated files as you write them). Now let’s just push it live:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;new blog post&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the last command, Github will see that my repo has changed and automatically refreshes &lt;a href=&quot;http://karpathy.github.io/&quot;&gt;karpathy.github.io&lt;/a&gt; to point to the newly generated &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;. My post is live!&lt;/p&gt;

&lt;p&gt;Anyway, that’s just a brief taste. Check out &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and get blogging in a sane way!&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Jun 2021 14:00:00 -0600</pubDate>
        <link>http://localhost:4000/2021/06/07/lensr/</link>
        <guid isPermaLink="true">http://localhost:4000/2021/06/07/lensr/</guid>
        
        
      </item>
    
  </channel>
</rss>
